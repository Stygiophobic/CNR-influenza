#singularity shell ../singularity_nextstrain/nextstrainV3.simg

rule all:
    input:
        metadata = "temp_data/metadata.tsv",
        filtered_seq = "temp_data/seq_filtered.fasta" ,
        align_fasta = "temp_data/seq_align.fasta",
        raw_tree = "temp_data/tree_raw.nwk",
        tree = "temp_data/refined_tree.nwk",
        node_data = "temp_data/tree_branch_lengths.json",
        auspice_json = "auspice/CNR-influenza.json",

rule xls_to_fasta_csv:
    input:
        xls_file = "data/last_gisaid_xls.xls"
    output:
        metadata_raw = "temp_data/metadata_raw.csv",
        fasta_seq = "temp_data/sequences.fasta"      
    shell:
        "script/process_xls.py {input} {output.fasta_seq} {output.metadata_raw}"   

rule make_metadata_onef:
    input:
        csv_file = rules.xls_to_fasta_csv.output.metadata_raw
    output:
        metadata = "temp_data/metadata.tsv"

    shell:
        "Rscript script/make_meta_onef.R {input} "

rule augur_filter:
    input:
        seq_file = rules.xls_to_fasta_csv.output.fasta_seq ,
        meta_subtype = rules.make_metadata.output.metadata
    output:
        filtered_seq = "temp_data/seq_filtered.fasta"  
    shell:
        "augur filter  "
        "--sequences {input.seq_file} "
        "--metadata {input.meta_subtype}  "
        "--output {output.filtered_seq} " 

rule augur_align:
    input:
        filter_fasta = rules.augur_filter.output.filtered_seq
    output:
        align_fasta = "temp_data/seq_align.fasta"
    shell:
        "augur align "
        "--sequences {input} "
        "--output {output} "

rule augur_raw_tree:
    input:
        align_data = rules.augur_align.output.align_fasta
    output:
        raw_tree = "temp_data/tree_raw.nwk"
    shell:
        "augur tree "
        "--alignment {input} "
        "--output {output} "    

rule augur_refine:
    input:
        tree = rules.augur_raw_tree.output.raw_tree,
        alignment = rules.augur_align.output.align_fasta,
        meta  = rules.make_metadata.output.metadata
    output:
        tree = "temp_data/refined_tree.nwk",
        node_data = "temp_data/tree_branch_lengths.json"
    shell:
        "augur refine "
        "--tree {input.tree} "
        "--alignment {input.alignment} "
        "--metadata {input.meta} "
        "--timetree "
        "--output-tree {output.tree} "
        "--output-node-data {output.node_data} "

rule export:
    input:
        tree = rules.augur_refine.output.tree,
        metadata = rules.make_metadata.output.metadata,
        branch_lengths = rules.augur_refine.output.node_data
    output:
        auspice_json = "auspice/CNR-influenza.json"
    shell:
        "augur export v2 "
        "--tree {input.tree} "
        "--metadata {input.metadata} "
        "--node-data {input.branch_lengths} "
        "--output {output.auspice_json} "